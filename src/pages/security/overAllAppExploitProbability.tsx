import { Card, CardContent, Typography, Box } from "@mui/material";
import { useContext, useEffect, useState } from "react";
import { LOCALSTORAGE_CONSTANTS } from "src/@core/static/app.constant";
import ChipsRounded from "src/component/Chip";
import { SecurityContext } from "src/context/SecurityContext";
import { overallExpo } from "src/services/securityService";
interface Props {
  appId: string;
}

const OverAllAppExpo = (props: Props) => {
  const { appId } = props;
  const [overAllApp, setOverAllApp] = useState<any>();
  const securityContext = useContext(SecurityContext);

  const getExpoColor = (data: string) => {
    switch (data) {
      case "Critical":
        return "error";
      case "High":
        return "warning";
      case "Medium":
        return "primary";
      case "Low":
        return "secondary";
      case "Unknown":
        return "info";
      case "Negligible":
        return "info";
      default:
        return "secondary";
    }
  };

  useEffect(() => {
    const data = localStorage.getItem(LOCALSTORAGE_CONSTANTS.workspace);
    if (data) {
      getoverallExpo(data, securityContext.runType, appId);
    }
  }, [LOCALSTORAGE_CONSTANTS.workspace, securityContext.runType, appId]);

  const getoverallExpo = (
    workspace_id: string,
    run_type: string,
    app_id: string
  ) => {
    overallExpo(workspace_id, run_type, app_id).then((res) => {
      setOverAllApp(res?.data);
    });
  };
  return (
    <Card sx={{ mt: 4 }}>
      <CardContent>
        <Box display="flex" justifyContent="space-between" gap={4}>
          <Box>
            <Typography variant="h5">OVERALL EXPLOIT PROBABILITY</Typography>
            <Typography variant="subtitle2">in next 30 days</Typography>
          </Box>
          <ChipsRounded
            label={
              overAllApp === "Unknown" ? "Negligible" : overAllApp || "N/A"
            }
            color={getExpoColor(overAllApp || "N/A")}
          />
        </Box>
      </CardContent>
    </Card>
  );
};

export default OverAllAppExpo;
